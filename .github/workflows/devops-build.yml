# Name of the workflow (appears in GitHub Actions tab)
name: Build Static Next.js Site

# Events that trigger this workflow
on:
  push: # Runs when code is pushed
    branches: [master] # Only if the push is to 'master' branch
  pull_request: # Runs when a pull request is created/updated
    branches: [master] # Only if the PR targets 'master'

jobs:
  build-and-export: # Job name
    runs-on: ubuntu-latest # GitHub provides a fresh Ubuntu VM to run this job

    steps:
      # Step 1: Download repository code into the VM
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js environment (here Node v18)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18" # Specify Node.js version
          cache: "npm" # Cache npm dependencies for faster builds

      # Step 3: Install project dependencies (using package-lock.json for consistency)
      - name: Install dependencies
        run: npm ci

      # Step 4: Run linting (if you have ESLint)
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true # Don't fail build if linting issues

      # Step 4: Build Next.js site and export static files into 'out/' folder
      - name: Build and export static site
        run: |
          npm run build   # Builds Next.js
          npm run export  # Exports static site (creates 'out' folder)

      # Step 5: Debugging - list some generated files, total count, and size
      - name: List generated files
        run: |
          echo "Generated static files:"
          find out -type f -name "*.html" | head -10   # Show first 10 HTML files
          echo "Total files: $(find out -type f | wc -l)" # Count total files
          echo "Total size: $(du -sh out/)"              # Show total size of 'out/'

      # Step 6: Save the built site as an artifact (downloadable from Actions tab)
      - name: Upload static site
        uses: actions/upload-artifact@v4
        with:
          name: static-website # Artifact name
          path: out/ # Upload contents of 'out/' folder
          retention-days: 30 # Keep artifacts for 30 days

      # Step 7 (Optional): Test the built site by serving it locally
      - name: Test built site
        run: |
          npm install -g serve              # Install 'serve' to host static files
          serve -s out -p 3000 &            # Start local server on port 3000
          sleep 5                           # Wait a few seconds for server to start
          curl -f http://localhost:3000 || echo "Homepage check failed"
          # ^ Checks if homepage responds; if it fails, prints error (but job won't fail)
